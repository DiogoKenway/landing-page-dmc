@use "../../scss/" as *;

.btn {
    font-weight: 700;
    font-size: 1.5rem;
    color: $txt-color;
    border: 0;
    outline: 0;
    cursor: pointer;
    padding: 1.5rem 5rem;
    font-family: $font-family;
    border-top-left-radius: $border-radius;
    border-bottom-right-radius: $border-radius;

    &-main {
        background: $second-color;
        background: linear-gradient(261deg, $second-color 0%, $second-color 2%, $main-color 100%);
    }

    &-second {
        background-color: $second-color;
    }
}

.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

// Animate the size, outside
.pulse:hover, 
.pulse:focus {
  animation: pulse 1s;
  box-shadow: 0 0 0 2em transparent;
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 var(--hover); }
}


.close:hover,
.close:focus {
  box-shadow: 
    inset -3.5em 0 0 0 var(--hover),
    inset 3.5em 0 0 0 var(--hover);  
}


.raise:hover,
.raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
  transform: translateY(-0.25em);
}


.up:hover,
.up:focus {
  box-shadow: inset 0 -3.25em 0 0 var(--hover);
}


.slide:hover,
.slide:focus {
  box-shadow: inset 6.5em 0 0 0 var(--hover);
}


.offset {  
  box-shadow: 
    0.3em 0.3em 0 0 var(--color),
    inset 0.3em 0.3em 0 0 var(--color);
  
  &:hover,
  &:focus {
    box-shadow: 
      0 0 0 0 var(--hover),
      inset 6em 3.5em 0 0 var(--hover);
  }
}

$colors: (

  pulse: $blue-dark, 
  offset: #19bc8b
);

// Sass variables compile to a static string; CSS variables are dynamic and inherited
  // Loop through the map and set CSS custom properties using Sass variables
@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 45deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
button {  
  color: $primary-color;
  transition: .5s;
  width: 50%;
  background: none;
  border: 2px solid;
  line-height: 1;
  margin: 0.5em;
  padding: 1em 2em;
  
  &:hover,
  &:focus { 
    border-color: var(--hover);
    color: #fff;
  }
}